diff --git a/Makefile.include b/Makefile.include
index 7823b5f..759ec40 100644
--- a/Makefile.include
+++ b/Makefile.include
@@ -136,7 +136,7 @@ ifeq ($(WPEDANTIC),1)
 endif
 
 # remove this once codebase is adapted
-CFLAGS += -Wno-implicit-fallthrough
+CFLAGS += -Wno-implicit-fallthrough -fno-optimize-sibling-calls
 CXXFLAGS += -Wno-implicit-fallthrough
 
 ifneq (10,$(if $(RIOT_VERSION),1,0)$(if $(__RIOTBUILD_FLAG),1,0))
diff --git a/core/kernel_init.c b/core/kernel_init.c
index 7d4f3eb..7698889 100644
--- a/core/kernel_init.c
+++ b/core/kernel_init.c
@@ -65,7 +65,7 @@ static void *idle_thread(void *arg)
     (void) arg;
 
     while (1) {
-        pm_set_lowest();
+        //pm_set_lowest(); // qemu never wakes the cpu up once it is put into sleep
     }
 
     return NULL;
diff --git a/examples/default/Makefile b/examples/default/Makefile
index 664945b..f902ca1 100644
--- a/examples/default/Makefile
+++ b/examples/default/Makefile
@@ -2,7 +2,7 @@
 APPLICATION = default
 
 # If no BOARD is found in the environment, use this default:
-BOARD ?= native
+BOARD ?= frdm-k64f
 
 # This has to be the absolute path to the RIOT base directory:
 RIOTBASE ?= $(CURDIR)/../..
diff --git a/examples/default/afl_call.c b/examples/default/afl_call.c
new file mode 100644
index 0000000..8e088b9
--- /dev/null
+++ b/examples/default/afl_call.c
@@ -0,0 +1,27 @@
+#include <stdint.h>
+
+int noHyperCall = 0; // 1: don't make hypercalls
+
+__attribute__ ((naked)) uint32_t aflCall(__attribute__ ((unused)) uint32_t a0, __attribute__ ((unused)) uint32_t a1, __attribute__ ((unused)) int32_t a2) {
+    /*
+     * In qemu, svc $0x3f is intercepted, without being executed
+     * On real device, it is executed and may cause firmware crash
+     * It can be skipped by set noHyperCall to 1
+     */
+    __asm__ __volatile__ ("svc $0x3f\n\t"
+                          "bx %lr\n\t");
+}
+
+int startForkserver(int ticks) {
+    if(noHyperCall)
+        return 0;
+    return aflCall(1, ticks, 0);
+}
+
+/*
+int doneWork(int val) {
+    if(noHyperCall)
+        return 0;
+    return aflCall(4, (uint32_t)val, 0);
+}
+*/
diff --git a/examples/default/afl_call.h b/examples/default/afl_call.h
new file mode 100644
index 0000000..c39f256
--- /dev/null
+++ b/examples/default/afl_call.h
@@ -0,0 +1,14 @@
+#ifndef _AFL_CALL_H
+#define _AFL_CALL_H
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+/* afl_call.c/.cpp */
+int startForkserver(int ticks);
+int doneWork(int val);
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/examples/default/main.c b/examples/default/main.c
index 9d6542d..80ce05e 100644
--- a/examples/default/main.c
+++ b/examples/default/main.c
@@ -34,8 +34,12 @@
 #include "net/gnrc.h"
 #endif
 
+#include "afl_call.h"
+
 int main(void)
 {
+    startForkserver(0);
+
 #ifdef MODULE_NETIF
     gnrc_netreg_entry_t dump = GNRC_NETREG_ENTRY_INIT_PID(GNRC_NETREG_DEMUX_CTX_ALL,
                                                           gnrc_pktdump_pid);
diff --git a/makefiles/arch/cortexm.inc.mk b/makefiles/arch/cortexm.inc.mk
index 2726fb4..96a41f0 100644
--- a/makefiles/arch/cortexm.inc.mk
+++ b/makefiles/arch/cortexm.inc.mk
@@ -10,7 +10,7 @@ export CFLAGS      += -mno-thumb-interwork
 endif
 export CFLAGS_LINK  = -ffunction-sections -fdata-sections -fno-builtin -fshort-enums
 export CFLAGS_DBG  ?= -ggdb -g3
-export CFLAGS_OPT  ?= -Os
+export CFLAGS_OPT  ?= -O0
 
 export CFLAGS += $(CFLAGS_CPU) $(CFLAGS_LINK) $(CFLAGS_DBG) $(CFLAGS_OPT)
 
